{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByLength","LENGTH","sortByAlphabet","ALPHABET","reset","this","visibleGoods","goods","sort","prevGood","nextGood","length","localeCompare","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEK,aAAe,WACb,EAAKD,SAAS,CAAEH,SAAUL,EAASU,UAbvC,EAgBEC,eAAiB,WACf,EAAKH,SAAS,CAAEH,SAAUL,EAASY,YAjBvC,EAoBEC,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAvBzB,4CA2BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAzDH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOC,GAgBzB,OAdAD,EAAaE,MAAK,SAACC,EAAkBC,GACnC,OAAQd,GACN,KAAKL,EAASU,OACZ,OAAOQ,EAASE,OAASD,EAASC,OACpC,KAAKpB,EAASY,SACZ,OAAOM,EAASG,cAAcF,GAChC,QACE,OAAO,MAGTf,GACFW,EAAaR,UAGRQ,EAqCgBO,CAAkBrB,EAAiBa,KAAKX,OAE7D,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYpB,IAAaL,EAASY,WAEpCc,QAASZ,KAAKH,eALhB,iCAUA,wBACEa,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYpB,IAAaL,EAASU,SAEpCgB,QAASZ,KAAKL,aALhB,4BAUA,wBACEe,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAAarB,IAEfsB,QAASZ,KAAKP,QALhB,sBAUEH,GAAcC,IAAaL,EAASM,OACpC,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAASZ,KAAKD,MAHhB,sBAUJ,6BACGE,EAAaY,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA7EpC,GAAyBC,IAAMC,WCtD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f5aa20f3.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prevGood: string, nextGood: string) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return prevGood.length - nextGood.length;\n      case SortType.ALPHABET:\n        return prevGood.localeCompare(nextGood);\n      default:\n        return 0;\n    }\n  });\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}